/* PROGRAM: EvenFib.cpp
 * AUTHOR: PHILIP TAN
 * DATE: Apr 15, 2015
 * DESCRIPTION: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 * NOTES: This is a problem from projecteuler.net
 *
 */

#include <iostream>
#include <string>
#include <sstream>
#include <cstdlib>

using namespace std;


int fibnumber(int enthfib);

int main() {

	int evenSum=0;
	int i=0;

	while (fibnumber(i) <= 4000000) {
		if ((fibnumber(i)%2) == 0) {
			evenSum += fibnumber(i);
		}
		i++;
	}
	cout << evenSum << endl;

}

//recursively finds the nth fibonacci number
int fibnumber(int enthfib)
{
	int fibvalue = 0;
	if (enthfib <= 1)
		{
			fibvalue = 0;
			return fibvalue;
		}
	else if (enthfib == 2)
		{
			fibvalue = 1;
			return fibvalue;
		}
	else
		{
			fibvalue = (fibnumber(enthfib-1)+fibnumber(enthfib-2));
			return fibvalue;
		}
return fibvalue;
}
